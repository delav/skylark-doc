import{_ as e,o,c as t,R as a}from"./chunks/framework.7M7mM_5n.js";const h=JSON.parse('{"title":"特点","description":"","frontmatter":{},"headers":[],"relativePath":"feature.md","filePath":"feature.md"}'),c={name:"feature.md"},i=a('<h1 id="特点" tabindex="-1">特点 <a class="header-anchor" href="#特点" aria-label="Permalink to &quot;特点&quot;">​</a></h1><blockquote><p>更新时间：2023-12-10</p></blockquote><ul><li><code>独特的用例编写方式。</code>功能组件是组成自动化测试用例的基本单元，通过拖拽移动+填写参数即可编写用例。</li><li><code>高可扩展性。</code>业务和平台分离，如需任何功能，开发相应的功能组件（python函数）即可，可用于复杂的业务。</li><li><code>高可读性。</code>用例可视化，所见即所得，无论任何人都可以清晰的看到用例的实现内容，利于团队协作。</li><li><code>低门槛，易使用。</code>无任何编程基础知识，关注的是你的自动化测试设计过程，而非脚本或者代码实现。</li><li><code>分布式运行。</code>支持一个项目分多个批次同时执行（多机器、多进程），可大大降低自动化执行所需的时间。</li><li><code>用例支持复杂结构。</code>在用例的设计中可使用代码语法控制用例流程，支持for/if else/while/break 等语法。</li><li><code>支持用例版本控制。</code>可以为某个时间点的项目创建版本，后续可单独执行旧版本的用例而不受当前版本影响。</li></ul>',3),l=[i];function d(r,_,s,n,f,u){return o(),t("div",null,l)}const m=e(c,[["render",d]]);export{h as __pageData,m as default};
