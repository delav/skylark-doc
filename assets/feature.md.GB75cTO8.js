import{_ as a,o as e,c as l,R as t}from"./chunks/framework.7M7mM_5n.js";const f=JSON.parse('{"title":"特点","description":"","frontmatter":{},"headers":[],"relativePath":"feature.md","filePath":"feature.md"}'),r={name:"feature.md"},i=t('<h1 id="特点" tabindex="-1">特点 <a class="header-anchor" href="#特点" aria-label="Permalink to &quot;特点&quot;">​</a></h1><blockquote><p>更新时间：2023-12-10</p></blockquote><ul><li><h4 id="独特的用例编写方式" tabindex="-1">独特的用例编写方式 <a class="header-anchor" href="#独特的用例编写方式" aria-label="Permalink to &quot;独特的用例编写方式&quot;">​</a></h4></li></ul><p>  功能组件是组成自动化测试用例的基本单元，通过使用功能组件和填写参数即可编写用例。功能组件可由用户直接编写代码实现， 也可以通过基础功能组件组合成高级的功能组件。</p><ul><li><h4 id="高可扩展性" tabindex="-1">高可扩展性 <a class="header-anchor" href="#高可扩展性" aria-label="Permalink to &quot;高可扩展性&quot;">​</a></h4></li></ul><p>  平台的定位是通用型的自动化测试平台，业务和平台分离，如果需要任何实现业务的功能，开发相应的功能组件导入平台即可使用， 可适用复杂的业务。</p><ul><li><h4 id="高可读性" tabindex="-1">高可读性 <a class="header-anchor" href="#高可读性" aria-label="Permalink to &quot;高可读性&quot;">​</a></h4></li></ul><p>  自动化用例内容可视化，所见即所得，无论任何人都可以清晰的看到和理解用例的实现内容，不会出现因为写用例的人不同而读不懂 的情况， 有利于团队协作。</p><ul><li><h4 id="低门槛-易使用" tabindex="-1">低门槛，易使用 <a class="header-anchor" href="#低门槛-易使用" aria-label="Permalink to &quot;低门槛，易使用&quot;">​</a></h4></li></ul><p>  编写自动化测试用例无任何编程基础知识，关注的是你的自动化测试设计过程，而非脚本或者代码的实现，无需学习即可快速上手。</p><ul><li><h4 id="分布式执行测试" tabindex="-1">分布式执行测试 <a class="header-anchor" href="#分布式执行测试" aria-label="Permalink to &quot;分布式执行测试&quot;">​</a></h4></li></ul><p>  支持一个项目在执行测试过程分多个批次（执行批次划分可通过配置控制）同时执行（多机器、多进程），可大大提高自动化测试效率， 减少执行时间。</p><ul><li><h4 id="用例支持复杂结构" tabindex="-1">用例支持复杂结构 <a class="header-anchor" href="#用例支持复杂结构" aria-label="Permalink to &quot;用例支持复杂结构&quot;">​</a></h4></li></ul><p>  用例的设计可通过流程控制组件，实现的循环、条件控制等逻辑流程，可以很便捷的实现复杂的用例。类似for/if else/while/break 等代码逻辑控制语法。</p><ul><li><h4 id="项目分支控制" tabindex="-1">项目分支控制 <a class="header-anchor" href="#项目分支控制" aria-label="Permalink to &quot;项目分支控制&quot;">​</a></h4></li></ul><p>  同一个项目可以创建多个分支，各个项目分支相互独立，在某个时间点创建单独分支后，该分支的项目内容将不受后续更新影响， 可用于控制自动化用例的迭代。</p><ul><li><h4 id="多环境控制" tabindex="-1">多环境控制 <a class="header-anchor" href="#多环境控制" aria-label="Permalink to &quot;多环境控制&quot;">​</a></h4></li></ul><p>  同一个项目可配置多套运行环境，如果有，还可以支持多地区。同一个测试用例可通过内置的环境、地区变量控制特殊逻辑，以实现用例在 多环境多地区的通用性。</p>',18),o=[i];function h(n,u,d,s,c,p){return e(),l("div",null,o)}const b=a(r,[["render",h]]);export{f as __pageData,b as default};
